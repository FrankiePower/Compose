name: Post Coverage Comment

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

permissions:
  pull-requests: write
  issues: write

jobs:
  comment:
    name: Post Coverage Comment
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          name: coverage-data
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Extract PR number
        id: pr
        run: |
          PR_NUMBER=$(cat coverage-data.txt | grep PR_NUMBER | cut -d'=' -f2)
          echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Post coverage comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const prNumber = ${{ steps.pr.outputs.number }};
            const body = fs.readFileSync('coverage-report.md', 'utf8');

            // Check if a coverage comment already exists
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('## Coverage Report')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
              console.log('Coverage comment updated successfully!');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: body
              });
              console.log('Coverage comment posted successfully!');
            }
